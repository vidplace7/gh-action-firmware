name: Build gh-action-firmware container

on:
  workflow_call:
    inputs:
      platform:
        description: Docker platform to target
        required: true
        type: string
      runs-on:
        description: Runner to use
        required: true
        type: string
      push:
        description: Push images to registry
        required: false
        type: boolean
        default: false
      pio_platform:
        description: PlatformIO platform to target
        required: true
        type: string
    outputs:
      digest:
        description: Digest of built image
        value: ${{ jobs.docker-build.outputs.digest }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write
  id-token: write
  attestations: write

jobs:
  docker-build:
    name: build-${{ inputs.platform }}
    outputs:
      digest: ${{ steps.docker_platform.outputs.digest }}
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Free disk space
        # This step is only needed for esp32 builds, as they can be quite large
        if: ${{ inputs.pio_platform == 'esp32' }}
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          docker-images: false

      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - name: Docker login
        if: ${{ inputs.push }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Sanitize platform string
        id: sanitize_platform
        # Replace slashes with underscores
        run: echo "cleaned_platform=${{ inputs.platform }}" | sed 's/\//_/g' >> $GITHUB_OUTPUT

      - name: Docker tag
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            GHA-master-${{ inputs.pio_platform }}-${{ steps.sanitize_platform.outputs.cleaned_platform }}
          flavor: latest=false

      - name: Docker build and push
        uses: docker/build-push-action@v6
        id: docker_platform
        with:
          context: .
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ inputs.platform }}
          build-args: |
            PIO_PLATFORM=${{ inputs.pio_platform }}
